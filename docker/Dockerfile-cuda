# Copied from https://github.com/abetlen/llama-cpp-python/blob/22917989003c5e67623d54ab45affa1e0e475410/docker/cuda_simple/Dockerfile
ARG CUDA_IMAGE
FROM nvidia/cuda:${CUDA_IMAGE}

# We need to set the host to 0.0.0.0 to allow outside access
ENV HOST 0.0.0.0

RUN apt-get update && apt-get upgrade -y \
    && apt-get install -y git build-essential \
    python3 python3-pip gcc wget \
    ocl-icd-opencl-dev opencl-headers clinfo \
    libclblast-dev libopenblas-dev \
    && mkdir -p /etc/OpenCL/vendors \
    && echo "libnvidia-opencl.so.1" > /etc/OpenCL/vendors/nvidia.icd

# setting build related env vars
ENV CUDA_DOCKER_ARCH=all
ENV LLAMA_CUBLAS=1

# Install dependencies
RUN python3 -m pip install --upgrade pip wheel setuptools
ARG TORCH_INDEX_URL
RUN python3 -m pip install torch torchvision torchaudio \
  --index-url ${TORCH_INDEX_URL}
RUN python3 -m pip install --upgrade pytest cmake scikit-build fastapi uvicorn \
  sse-starlette pydantic-settings starlette-context

# Install llama-cpp-python (build with cuda)
RUN CMAKE_ARGS="-DLLAMA_CUBLAS=on" pip install llama-cpp-python

# Install Streamlit
RUN python3 -m pip install streamlit

# Copy the context in, and use it to install onprem from source
COPY . .
RUN python3 -m pip install .

# Default to launching into the REPL
CMD python3